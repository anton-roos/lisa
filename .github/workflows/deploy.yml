name: Deploy to IIS

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: true
        type: choice
        options: [qa, prod]

jobs:
  deploy:
    # run directly on your IIS server
    runs-on: self-hosted
    env:
      # ---- Adjust these to your actual site roots and app pools ----
      QA_PATH:   C:\Sites\dceg-learn
      PROD_PATH: C:\Sites\dceg-lis
      QA_POOL:   dceg-learn.co.za
      PROD_POOL: dceg-lis.co.za
      # Optional: keep these folders on server untouched during mirror
      ROBOT_SAFE_XD: "logs uploads"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Select target paths
        shell: pwsh
        run: |
          if ("${{ github.event.inputs.environment }}" -eq "qa") {
            "DEPLOY_PATH=$env:QA_PATH"   | Out-File -FilePath $env:GITHUB_ENV -Append
            "APP_POOL=$env:QA_POOL"      | Out-File -FilePath $env:GITHUB_ENV -Append
          } else {
            "DEPLOY_PATH=$env:PROD_PATH" | Out-File -FilePath $env:GITHUB_ENV -Append
            "APP_POOL=$env:PROD_POOL"    | Out-File -FilePath $env:GITHUB_ENV -Append
          }
          "PUBLISH_DIR=$pwd\publish"     | Out-File -FilePath $env:GITHUB_ENV -Append

      - name: Restore
        run: dotnet restore

      - name: Build
        run: dotnet build --configuration Release --no-restore

      - name: Publish
        run: dotnet publish --configuration Release --no-build --output "$env:PUBLISH_DIR"

      - name: Stop site cleanly (app_offline + stop app pool)
        shell: pwsh
        run: |
          New-Item -ItemType File -Path "$env:DEPLOY_PATH\app_offline.htm" -Force | Out-Null
          Import-Module WebAdministration
          if (Get-WebAppPoolState -Name $env:APP_POOL) {
            Stop-WebAppPool -Name $env:APP_POOL
          }

      - name: Deploy (mirror, but KEEP appsettings*.json)
        shell: pwsh
        run: |
          $xf = @("appsettings*.json")        # never overwrite your server configs
          $xd = @()                           # folders to ignore during mirror
          if ($env:ROBOT_SAFE_XD) { $xd = $env:ROBOT_SAFE_XD.Split(' ') }

          $xfArgs = $xf | ForEach-Object { "/XF `"$($_)`"" } | Out-String
          $xdArgs = $xd | Where-Object { $_ -ne "" } | ForEach-Object { "/XD `"$($_)`"" } | Out-String

          $cmd = "robocopy `"$env:PUBLISH_DIR`" `"$env:DEPLOY_PATH`" /MIR /NFL /NDL /NP /R:2 /W:2 $xfArgs $xdArgs"
          Write-Host $cmd
          cmd.exe /c $cmd
        # Notes:
        # /MIR mirrors (adds/updates/deletes) but respects /XF, so appsettings*.json remains untouched.

      - name: Start app pool & bring site online
        shell: pwsh
        run: |
          Import-Module WebAdministration
          Start-WebAppPool -Name $env:APP_POOL
          Remove-Item "$env:DEPLOY_PATH\app_offline.htm" -Force -ErrorAction SilentlyContinue
