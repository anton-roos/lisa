trigger:
- main

stages:
# ===== CI: Build & publish artifact =====
- stage: Build
  displayName: Build
  jobs:
  - job: BuildJob
    pool: { name: Default }
    variables:
      solution: '**/*.sln'
      buildPlatform: 'Any CPU'
      buildConfiguration: 'Release'
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      inputs:
        restoreSolution: '$(solution)'

    - task: VSBuild@1
      inputs:
        solution: '$(solution)'
        msbuildArgs: >-
          /p:DeployOnBuild=true
          /p:WebPublishMethod=Package
          /p:PackageAsSingleFile=true
          /p:SkipInvalidConfigurations=true
          /p:DesktopBuildPackageLocation="$(Build.ArtifactStagingDirectory)\WebApp.zip"
          /p:DeployIisAppPath="Default Web Site"
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - task: VSTest@2
      inputs:
        platform: '$(buildPlatform)'
        configuration: '$(buildConfiguration)'

    - publish: '$(Build.ArtifactStagingDirectory)'
      artifact: drop

# ===== CD: antonroos.co.za =====
- stage: deploy antonroos.co.za
  displayName: Deploy to antonroos.co.za
  dependsOn: Build
  jobs:
  - deployment: DeployToDev
    environment: 'antonroos.co.za'
    pool: { name: Default }
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - template: deploy-iis-steps.yml
            parameters:
              siteName:  antonroos.co.za
              appPool:   antonroos.co.za
              host:      $(Dev_IIS_Host)
              # optional:
              # packagePath: '$(Pipeline.Workspace)\drop\WebApp.zip'
              # enableHttps: true
              # certThumbprint: '0123456789ABCDEF0123456789ABCDEF01234567'

# ===== CD: QA =====
- stage: Deploy_QA
  displayName: Deploy to QA
  dependsOn: Deploy_Dev
  condition: succeeded()
  jobs:
  - deployment: DeployToQA
    environment: 'QA'
    pool: { name: Default }
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - template: deploy-iis-steps.yml
            parameters:
              siteName:  $(QA_IIS_SiteName)
              appPool:   $(QA_IIS_AppPool)
              host:      $(QA_IIS_Host)

# ===== CD: Prod =====
- stage: Deploy_Prod
  displayName: Deploy to Prod
  dependsOn: Deploy_QA
  condition: succeeded()
  jobs:
  - deployment: DeployToProd
    environment: 'Prod'
    pool: { name: Default }   # or a separate locked-down pool
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - template: deploy-iis-steps.yml
            parameters:
              siteName:  $(Prod_IIS_SiteName)
              appPool:   $(Prod_IIS_AppPool)
              host:      $(Prod_IIS_Host)
