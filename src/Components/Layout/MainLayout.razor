@inherits LayoutComponentBase
@inject NavigationManager NavigationManager

<div class="page">

    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="mobile-sidebar">
        <MobileNavBar />
    </div>

    <main class="flex-grow-1">
        <div id="header" class="d-flex justify-content-between align-items-center bg-light px-4 shadow-sm">
            <div>
                <AuthorizeView Context="_" Roles="@Roles.SystemAdministrator">
                    <SelectSchool></SelectSchool>
                </AuthorizeView>
            </div>

            <div class="d-flex align-items-center py-3">
                <AuthorizeView Context="_">
                    <Authorized>
                        <button @onclick="Logout" class="btn btn-outline-danger btn-sm">
                            <i class="bi bi-box-arrow-right me-1"></i> Logout
                        </button>
                    </Authorized>
                    <NotAuthorized>
                        <button @onclick="Login" class="btn btn-outline-primary btn-sm">
                            <i class="bi bi-box-arrow-in-right me-1"></i> Login
                        </button>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>


        <CustomErrorBoundary>
            <ChildContent>
                <article class="content container">
                    @Body
                </article>
            </ChildContent>
            <ErrorContent />
        </CustomErrorBoundary>
        @* Required *@
        <MudThemeProvider />
        <MudPopoverProvider />

        @* Needed for dialogs *@
        <MudDialogProvider />

        @* Needed for snackbars *@
        <MudSnackbarProvider />
    </main>

    <VersionFooter />

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const navWrapper = document.querySelector('.nav-wrapper');
            const leftArrow = document.querySelector('.left-arrow');
            const rightArrow = document.querySelector('.right-arrow');

            function updateArrowsVisibility() {
                leftArrow.style.display = navWrapper.scrollLeft <= 0 ? 'none' : 'block';
                rightArrow.style.display = navWrapper.scrollLeft + navWrapper.clientWidth >= navWrapper.scrollWidth ? 'none' : 'block';
            }

            leftArrow.addEventListener('click', () => {
                navWrapper.scrollBy({ left: -100, behavior: 'smooth' });
                console.log("clicked the left arrow");
            });

            rightArrow.addEventListener('click', () => {
                navWrapper.scrollBy({ left: 100, behavior: 'smooth' });
                console.log("clicked the right arrow");
            });

            navWrapper.addEventListener('scroll', updateArrowsVisibility);

            updateArrowsVisibility();
        });
    </script>
</div>

@code {
    private void Logout()
    {
        NavigationManager.NavigateTo("/logout");
    }

    private void Login()
    {
        NavigationManager.NavigateTo("/login");
    }
}
