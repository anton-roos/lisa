@inherits LayoutComponentBase
@inject NavigationManager NavigationManager
@inject Microsoft.AspNetCore.Antiforgery.IAntiforgery Anti
@inject IHttpContextAccessor Http

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <div class="mobile-sidebar">
        <MobileNavBar />
    </div>

    <main class="flex-grow-1">
        <div id="header" class="d-flex justify-content-between align-items-center bg-light px-4 shadow-sm">
            <div>
                <AuthorizeView Context="_" Roles="@Roles.SystemAdministrator">
                    <SelectSchool />
                </AuthorizeView>
            </div>

            <div class="d-flex align-items-center py-3">
                <AuthorizeView Context="_">
                    <Authorized>
                        <form action="/Identity/Account/Logout" method="post" class="m-0">
                            @if (_afToken is not null)
                            {
                                <input type="hidden" name="@_afField" value="@_afToken" />
                                <input type="hidden" name="returnUrl" value="/" />
                            }
                            <button type="submit" class="btn btn-outline-danger btn-sm">
                                <i class="bi bi-box-arrow-right me-1"></i> Logout
                            </button>
                        </form>
                    </Authorized>
                    <NotAuthorized>
                        <a href="/Identity/Account/Login" class="btn btn-primary btn-sm">Login</a>
                    </NotAuthorized>
                </AuthorizeView>
            </div>
        </div>

        <CustomErrorBoundary>
            <ChildContent>
                <article class="content container">
                    @Body
                </article>
            </ChildContent>
            <ErrorContent />
        </CustomErrorBoundary>

        <MudThemeProvider />
        <MudPopoverProvider />
        <MudDialogProvider />
        <MudSnackbarProvider />
    </main>
</div>

@code {
    private string _afField = "__RequestVerificationToken";
    private string? _afToken;

    protected override void OnInitialized()
    {
        if (Http.HttpContext is { } ctx)
        {
            var tokens = Anti.GetAndStoreTokens(ctx);
            _afField = tokens.FormFieldName;
            _afToken = tokens.RequestToken;
        }
    }
}
